# Generated by Django 5.2.6 on 2025-10-09 21:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название атрибута (например: вес, срок хранения, условия хранения)",
                        max_length=255,
                        unique=True,
                        verbose_name="Название",
                    ),
                ),
            ],
            options={
                "verbose_name": "Атрибут",
                "verbose_name_plural": "Атрибуты",
                "db_table": "attributes",
                "db_table_comment": "Таблица с возможными атрибутами продуктов",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название категории",
                        max_length=255,
                        unique=True,
                        verbose_name="Название",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Уникальное имя для URL (латиница, дефисы)",
                        max_length=255,
                        unique=True,
                        verbose_name="URL-идентификатор",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Описание категории",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Порядок сортировки категорий в списке",
                        verbose_name="Порядок отображения",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Определяет, показывается ли категория в каталоге",
                        verbose_name="Активна",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время добавления категории",
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата и время последнего обновления категории",
                        verbose_name="Дата обновления",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Родительская категория (если есть вложенность)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="catalog.category",
                        verbose_name="Родительская категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "db_table": "categories",
                "db_table_comment": "Таблица с категориями продуктов",
                "ordering": ("sort_order", "name"),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название продукта",
                        max_length=255,
                        verbose_name="Название",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Описание продукта", verbose_name="Описание"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Уникальное имя для URL (латиница, дефисы)",
                        max_length=255,
                        unique=True,
                        verbose_name="URL-идентификатор",
                    ),
                ),
                (
                    "composition",
                    models.TextField(
                        help_text="Состав продукта", verbose_name="Состав"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        choices=[("kg", "кг"), ("l", "л"), ("pcs", "шт")],
                        default="pcs",
                        help_text="Единица измерения продукта (например: кг, л, шт)",
                        max_length=10,
                        verbose_name="Единица измерения",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Цена продукта",
                        max_digits=10,
                        verbose_name="Цена",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Скидка на продукт в процентах",
                        max_digits=5,
                        verbose_name="Скидка (%)",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Артикул (Stock Keeping Unit)",
                        max_length=100,
                        unique=True,
                        verbose_name="SKU",
                    ),
                ),
                (
                    "stock",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Количество продуктов на складе",
                        verbose_name="Остаток",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Определяет, показывается ли продукт в каталоге",
                        verbose_name="Активен",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время добавления продукта",
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата и время последнего обновления",
                        verbose_name="Дата обновления",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Категория, к которой относится продукт",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="catalog.category",
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Продукты",
                "db_table": "products",
                "db_table_comment": "Таблица с информацией о продуктах",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image_path",
                    models.ImageField(
                        help_text="Путь к изображению продукта",
                        upload_to="product_images/",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Описание изображения для SEO и доступности",
                        max_length=255,
                        verbose_name="Альтернативный текст",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Порядок сортировки изображений продукта",
                        verbose_name="Порядок отображения",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Продукт, к которому относится изображение",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="catalog.product",
                        verbose_name="Продукт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изображение продукта",
                "verbose_name_plural": "Изображения продукта",
                "db_table": "product_images",
                "db_table_comment": "Таблица с изображениями продуктов",
                "ordering": ("product__name", "sort_order"),
            },
        ),
        migrations.CreateModel(
            name="ProductNutrition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "calories",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Калории (ккал)",
                        max_digits=6,
                        null=True,
                        verbose_name="Калории",
                    ),
                ),
                (
                    "proteins",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Белки (г)",
                        max_digits=6,
                        null=True,
                        verbose_name="Белки",
                    ),
                ),
                (
                    "fats",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Жиры (г)",
                        max_digits=6,
                        null=True,
                        verbose_name="Жиры",
                    ),
                ),
                (
                    "carbs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Углеводы (г)",
                        max_digits=6,
                        null=True,
                        verbose_name="Углеводы",
                    ),
                ),
                (
                    "product",
                    models.OneToOneField(
                        help_text="Продукт, к которому относится данная пищевая ценность",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_nutrition",
                        to="catalog.product",
                        verbose_name="Продукт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пищевая ценность",
                "verbose_name_plural": "Пищевая ценность",
                "db_table": "product_nutritions",
                "db_table_comment": "Таблица с информацией о пищевой ценности продуктов",
                "ordering": ("product__name",),
            },
        ),
        migrations.CreateModel(
            name="ProductAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="Значение атрибута (например: 500 г, 12 месяцев)",
                        max_length=255,
                        verbose_name="Значение",
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        help_text="Атрибут продукта (например: вес, срок хранения, условия хранения)",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attribute_values",
                        to="catalog.attribute",
                        verbose_name="Атрибут",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Продукт, к которому относится атрибут",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_attributes",
                        to="catalog.product",
                        verbose_name="Продукт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Атрибут продукта",
                "verbose_name_plural": "Атрибуты продуктов",
                "db_table": "product_attributes",
                "db_table_comment": "Таблица со значениями атрибутов продуктов",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("product", "attribute"),
                        name="unique_product_attribute",
                    )
                ],
            },
        ),
    ]
